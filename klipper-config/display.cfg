[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
spi_software_sclk_pin: EXP2_2
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_speed: 100000
contrast: 63
encoder_pins: ^EXP2_3, ^EXP2_5
click_pin: ^!EXP1_2

[output_pin beeper]
pin: EXP1_1
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1000

[neopixel fysetc_mini12864]
pin: EXP1_6
chain_count: 3
color_order: RGB
initial_RED: 0.3
initial_GREEN: 0.3
initial_BLUE: 0.3

[neopixel led_bar]
pin: PB0
chain_count: 16
color_order: GRB
initial_RED: 0.000
initial_GREEN: 0.000
initial_BLUE: 0.000

### menu octoprint ###
[menu __main __octoprint]
type: list
name: Fluidd

[menu __main __octoprint __pause]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Pause printing
gcode: PAUSE

[menu __main __octoprint __resume]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Resume printing
gcode: RESUME

[menu __main __octoprint __abort]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Abort printing
gcode: CANCEL_PRINT

[menu __main __control __homez]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home Down
gcode: HOME_DOWN

[menu __main __control __fanoverride]
type: list
enable: {'fan' in printer and 'gcode_macro SET_FAN_SPEED' in printer}
name: Fan overrides
index: 9

[menu __main __control __fanoverride __reset]
type: command
enable: {'gcode_macro RESET_FAN_SPEED' in printer}
name: Reset
gcode:
  RESET_FAN_SPEED

[menu __main __control __fanoverride __fixed]
type: input
name: Fixed: {'OFF' if (menu.input < 0) else ('%3d%%' % (menu.input))}
input: {(-1) if (printer['gcode_macro M106'].fixspeed < 0) else (printer['gcode_macro M106'].fixspeed * 100 / 255)}
input_min: -1
input_max: 100
input_step: 1
gcode:
  SET_FAN_SPEED FIXED={'-1' if (menu.input < 0) else '%d' % (menu.input * 255 / 100)}

[menu __main __control __fanoverride __minspeed]
type: input
name: Min: {'%3d' % (menu.input)}%
input: {printer['gcode_macro M106'].minspeed * 100 / 255}
input_min: 0
input_max: 100
input_step: 1
gcode:
  SET_FAN_SPEED MIN={'%d' % (menu.input * 255 / 100)}

[menu __main __control __fanoverride __maxspeed]
type: input
name: Max: {'%3d' % (menu.input)}%
input: {printer['gcode_macro M106'].maxspeed * 100 / 255}
input_min: 0
input_max: 100
input_step: 1
gcode:
  SET_FAN_SPEED MAX={'%d' % (menu.input * 255 / 100)}

[menu __main __control __fanoverride __multiplier]
type: input
name: Mul: {'%5.2f' % (menu.input)}
input: {printer['gcode_macro M106'].multiplier}
input_min: 0
input_max: 10
input_step: 0.1
gcode:
  SET_FAN_SPEED MUL={'%f' % menu.input}

[menu __main __control __fanoverride __speed]
type: input
name: Speed: {'%3d' % (menu.input*100)}%
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 0.01
gcode:
  M106 S{'%d' % (menu.input*255)}

[menu __main __control __caselightonoff]
type: input
enable: {'led caselight' in printer}
name: Lights: {'ON ' if menu.input else 'OFF'}
input: {printer['led caselight'].color_data[0][3]}
input_min: 0
input_max: 1
input_step: 1
gcode:
  SET_LED LED=caselight WHITE={1 if menu.input else 0}

[menu __main __control __caselightpwm]
type: input
enable: {'led caselight' in printer}
name: Lights: {'%3d' % (menu.input*100)}%
input: {printer['led caselight'].color_data[0][3]}
input_min: 0.0
input_max: 1.0
input_step: 0.05
realtime: true
gcode:
  SET_LED LED=caselight WHITE={menu.input}

[menu __main __tune __square_corner_velocity]
type: input
name: SQV: {menu.input}
input: {printer.toolhead.square_corner_velocity}
input_step: 1
input_min: 1
input_max: 50
gcode:
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={menu.input}

[menu __main __tune __square_corner_velocity_infill]
type: input
name: Infill SQV: {menu.input}
input: {printer.save_variables.variables.infill_sqv | default(printer.configfile.settings.printer.square_corner_velocity, true) }
input_step: 1
input_min: 1
input_max: 50
gcode:
  SET_INFILL_SQV SQV={menu.input}

[menu __main __filament __loadf]
type: command
name: Load Filament
gcode: FILAMENT_LOAD

[menu __main __filament __loads]
type: command
enable: {False}
name: Load Fil. slow

[menu __main __filament __unloadf]
type: command
name: Unload Filament
gcode: FILAMENT_UNLOAD

[menu __main __filament __unloads]
type: command
enable: {False}
name: Unload Fil.slow

[menu __main __setup __calib __delta_calib_auto]
type: command
enable: {False}
name: Delta cal. auto

[menu __main __setup __calib __delta_calib_man]
type: list
enable: {False}
name: Delta cal. man

[menu __main __setup __calib __bedprobe]
type: command
enable: {False}
name: Bed probe

[menu __main __setup __calib __probe_calib]
type: list
name: Probe cal

[menu __main __setup __calib __probe_calib __start]
type: command
name: Start
gcode:
  G28
  G90
  G0 X100 Y100 Z5
  PROBE_CALIBRATE

[menu __main __setup __calib __probe_calib __test_z]
type: input
name: Test Z: {['--','-','-1','-.5','-.1','-.05','+.05','+.1','+.5','+1','+','++'][menu.input|int]}
input: 2
input_min: 0
input_max: 11
input_step: 1
gcode:
  {%- if menu.event == 'long_click' -%}
    TESTZ Z={['--','-','-1','-.5','-.1','-.05','+.05','+.1','+.5','+1','+','++'][menu.input|int]}
  {%- endif -%}

[menu __main __setup __calib __probe_calib __accept]
type: command
name: Accept
gcode:
  ACCEPT
  G90
  G0 X100 Y100 Z5

[menu __main __setup __calib __probe_calib __abort]
type: command
name: Abort
gcode:
  ABORT
