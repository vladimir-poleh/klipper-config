[gcode_macro M73]
rename_existing: M73.1
gcode:
  {% set progress = params.P | default(0) | int %}

  SET_GCODE_VARIABLE MACRO=DIM_LED_BAR VARIABLE=progress VALUE={progress}

  {% if progress == 100 %}
    {% set progress = 0 %} # Reset progress after end. PrusaSlicer adding M73 P100 after finish G-Code
  {% endif %}

  SET_LED_BAR_PROGRESS LED=led_bar PROGRESS={progress}
  SET_KNOB_PROGRESS LED=fysetc_mini12864 PROGRESS={progress}

  M73.1 P{params.P}

[gcode_macro SET_LED_BAR_PROGRESS]
variable_brightness: 1
gcode:
  {% set progress = params.PROGRESS | default(0) | int %}
  {% set led = params.LED | default("led_bar") %}
  {% set count = printer.configfile.settings["neopixel %s" % params.LED].chain_count %}
  {% set green_leds = (progress / 100 * count) | round | int %}
  {% set brightness = brightness | float %}

  {% for i in range(count) %}
    {% if green_leds > i %}
      SET_LED LED={led} RED={0.5 * brightness} GREEN={0.5 * brightness} BLUE={0.5 * brightness} INDEX={i + 1} {% if i < count - 1 %}TRANSMIT=0{% endif %}
    {% else %}
      SET_LED LED={led} RED={0.03 * brightness} GREEN={0.03 * brightness} BLUE={0.03 * brightness} INDEX={i + 1} {% if i < count - 1 %}TRANSMIT=0{% endif %}
    {% endif %}
  {% endfor %}

[gcode_macro RESET_PROGRESS]
variable_brightness: 1
gcode:
  {% set led_bar_settings = printer.configfile.settings["neopixel led_bar"] %}
  {% set fysetc_mini12864_settings = printer.configfile.settings["neopixel fysetc_mini12864"] %}

  SET_LED LED=led_bar RED={led_bar_settings.initial_red * brightness} GREEN={led_bar_settings.initial_green * brightness} BLUE={led_bar_settings.initial_blue * brightness}
  SET_LED LED=fysetc_mini12864 RED={fysetc_mini12864_settings.initial_red} GREEN={fysetc_mini12864_settings.initial_green} BLUE={fysetc_mini12864_settings.initial_blue}

[gcode_macro SET_KNOB_PROGRESS]
gcode:
  {% set progress = params.PROGRESS | default(0) | int %}
  {% set led = params.LED | default("led_bar") %}

  {% if progress < 40 %}
    SET_KNOB_COLOR LED={led} RED=0.8 GREEN=0 BLUE=0
  {% elif progress < 70 %}
    SET_KNOB_COLOR LED={led} RED=0.8 GREEN=0.8 BLUE=0
  {% else %}
    SET_KNOB_COLOR LED={led} RED=0 GREEN=0.8 BLUE=0
  {% endif %}

[gcode_macro SET_KNOB_COLOR]
gcode:
  SET_LED LED={params.LED} RED={params.RED} GREEN={params.GREEN} BLUE={params.BLUE} INDEX=2 TRANSMIT=0
  SET_LED LED={params.LED} RED={params.RED} GREEN={params.GREEN} BLUE={params.BLUE} INDEX=3

[gcode_macro DIM_LED_BAR]
variable_progress: 0
gcode:
  {% set led = params.LED | default("led_bar") %}

  {% set led_bar_settings = printer.configfile.settings["neopixel %s" % led] %}
  {% set brightness = (params.BRIGHTNESS | default(0) | float) / 100 %}

  SET_GCODE_VARIABLE MACRO=SET_LED_BAR_PROGRESS VARIABLE=brightness VALUE={brightness}
  SET_GCODE_VARIABLE MACRO=RESET_PROGRESS VARIABLE=brightness VALUE={brightness}

  {% if printer.idle_timeout.state != "Printing" %}
    SET_LED LED={led} RED={led_bar_settings.initial_red * brightness} GREEN={led_bar_settings.initial_green * brightness} BLUE={led_bar_settings.initial_blue * brightness}
  {% else %}
    SET_LED_BAR_PROGRESS LED={led} PROGRESS={progress}
  {% endif %}

# Park toolhead
[gcode_macro M125]
gcode:
  {% set X = params.X | default(100) | float %}
  {% set Y = params.Y | default(0)   | float %}
  {% set Z = params.Z | default(20)  | float %}

  SAVE_GCODE_STATE NAME=parking
  M117 Parking toolhead
  {% if printer.toolhead.position.z < 200 %}
    G91
    G1 Z{Z} F600 ; move up 20 mm
  {% endif %}
  G90
  G1 X{X} Y{Y} F4000 # move to park position
  RESTORE_GCODE_STATE NAME=parking

# Beep
[gcode_macro M300]
gcode:
  {% set S = params.S | default(900) | int %}
  {% set P = params.P | default(100) | int %}

  SET_PIN PIN=beeper VALUE={S}
  G4 P{P}
  SET_PIN PIN=beeper VALUE=0

# Filament change
[gcode_macro M600]
gcode:
  FILAMENT_CHANGE

# Load filament
[gcode_macro M701]
gcode:
  FILAMENT_LOAD

# Unload filament
[gcode_macro M702]
gcode:
  FILAMENT_UNLOAD

[gcode_macro FILAMENT_CHANGE]
gcode:
  M117 Filament Change
  M118 Filament Change
  SAVE_GCODE_STATE NAME=filament_change
  PAUSE
  ANNOYING_BEEPS
  FILAMENT_UNLOAD        ; unload
  M117 Run RESUME_FILAMENT_CHANGE

[gcode_macro RESUME_FILAMENT_CHANGE]
gcode:
  M117 New filament
  M118 New filament
  M701
  COUNTDOWN TIME=1 MSG="Clean"
  RESUME
  M117 Resuming
  M118 Resuming
  RESTORE_GCODE_STATE NAME=filament_change MOVE=1
  M117 Printing..
  M118 Printing..

[gcode_macro FILAMENT_LOAD]
gcode:
  SAVE_GCODE_STATE NAME=loading_filament
  M117 Loading Filament
  M83
  G92 E0.0
  LOW_TEMP_CHECK T=210
  G1 E100 F1000  ; length of bowden tube till cold-end (~100mm)
  G1 E40 F100    ; some extra to prime the nozzle --> slower
  G92 E0.0
  RESTORE_GCODE_STATE NAME=loading_filament

[gcode_macro FILAMENT_UNLOAD]
gcode:
  SAVE_GCODE_STATE NAME=unloading_filament
  M117 Unloading Filament
  LOW_TEMP_CHECK T=150
  G91 ; set relative
  G1 E5 F100
  G92 E0.0
  G1 E-160 F2000 ; the E is the length of the bowden tube.
  G92 E0.0
  RESTORE_GCODE_STATE NAME=unloading_filament

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  {% set X = params.X | default(100) | float %}
  {% set Y = params.Y | default(0)   | float %}
  {% set Z = params.Z | default(20)  | float %}
  {% set E = params.E | default(1)   | float %}

  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  LOW_TEMP_CHECK
  G91                  ; relative
  G1 E-{E} F300        ; retract
  M125 X{X} Y{Y} Z{Z}  ; park

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  {% set E = params.E | default(1) | float %}

  G91
  G1 E{E} F2100
  G90
  RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
  BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  RESET_PROGRESS
  HOME_DOWN
  BASE_CANCEL_PRINT
  M107

[gcode_macro START_PRINT]
gcode:
  {% set T_BED = params.T_BED | default(60) | float %}
  {% set T_EXTRUDER = params.T_EXTRUDER | default(190) | float %}

  M117 Homing
  #metric values
  G21
  # Use absolute coordinates
  G90
  # Home the printer
  G28 X0 Y0 Z0
  # Move the nozzle near the bed
  G1 X15 Y20 Z5 F6000

  M117 Waiting for temperature
  # Start bed heating and continue
  M140 S{T_BED}
  {% if printer.heater_bed.temperature < T_BED*0.85 %}
    M190 S{T_BED*0.85} ; wait till 0.85 of bed temp is reached, then continue
  {% endif %}

  M140 S{T_BED}
  M109 S{T_EXTRUDER}
  M190 S{T_BED}

  M117 Calibrating...
  Z_TILT_ADJUST
  BED_MESH_CALIBRATE

  # Prime line
  PRIME_LINE
  M117 Printing...

[gcode_macro END_PRINT]
gcode:
  M117 Done printing
  G91

  {% set X_MOVE = 20 if printer.toolhead.position.x > 20 else printer.toolhead.position.x %}
  {% set Y_MOVE = 20 if printer.toolhead.position.y > 20 else printer.toolhead.position.y %}
  {% set Z_MAX_LEFT = printer.toolhead.axis_maximum.z - printer.toolhead.position.z %}
  {% set Z_MOVE = 1.0 if Z_MAX_LEFT > 1.0 else Z_MAX_LEFT %}

  # Move Z axis up
  G1 E-5 F300.0                ; Retract the filament a bit before lifting the nozzle, to release some of the pressure
  G1 Z+{Z_MOVE} E-15 X-{X_MOVE} Y-{Y_MOVE} F9000 ; Move Z up a bit and retract filament even more
  G90 # Absolute X/Y
  HOME_DOWN                    ; Move X/Y to min endstops, so the head is out of the way
  TURN_OFF_HEATERS
  RESET_PROGRESS
  # Disable steppers
  M84

[gcode_macro PRIME_LINE]
gcode:
  M117 Prime Line
  # Reset Extruder
  G92 E0
  # Move Z axis up
  G1 Z2.0 F3000
  # Draw prime line
  G1 X0 Y30 Z0.28 F5000.0        ; Move to start position
  G1 X0 Y180.0 Z0.28 F1500.0 E20 ; Draw the first line
  G1 X2 Y180.0 Z0.28 F5000.0     ; Move to side a little
  G1 X2 Y50 Z0.28 F1500.0 E40    ; Draw the second line
  # Reset Extruder
  G92 E0
  # Move Z axis up
  G1 Z2.0 F3000

# LOW_TEMP_CHECK checks if there is a setpoint for the extruder.
# - If this setpoint is reached, continue.
# - If not, heat to setpoint.
# - If no setpoint, heat to parameter T (default@230)
[gcode_macro LOW_TEMP_CHECK]
gcode:
  {% set T = params.T | default(230) | float %}

  {% if printer.extruder.target != 0 %}
    # if there is a setpoint for extruder
    {% if printer.extruder.temperature < printer.extruder.target %}
      # if not reached, heat
      M118 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
      M109 S{printer.extruder.target | float}
    {% endif %}
  {% else %}
    # if no setpoint for extruder
    {% if printer.extruder.temperature < T %}
      # heat to T.
      M118 No setpoint, heating to {T}.
      M109 S{T}
    {% endif %}
  {% endif %}

[gcode_macro COUNTDOWN]
gcode:
  {% set MSG = params.MSG   | default("Time: ") %}
  {% set TIME = params.TIME | default(10) | int %}

  # countdown
  {% for s in range(TIME, 0, -1) %}
    # dwell 1 second
    G4 P1000
    # echo
    M117 {MSG} {s}s
    M118 {MSG} {s}s
  {% endfor %}

[gcode_macro CALIBRATE_BED]
gcode:
  G91
  G28 X0 Y0 Z0
  Z_TILT_ADJUST
  BED_MESH_CALIBRATE
  G91
  G28 X0 Y0 Z0
  G90

[gcode_macro ANNOYING_BEEPS]
gcode:
  {% set N = params.N | default(5) | int %}
  {% for i in range(N, 0, -1) %}
    M300 P500
    {% if i != 0 %}
      G4 P500
    {% endif %}
  {% endfor %}

[gcode_macro HOME_DOWN]
gcode:
  {% set Z_MAX_LEFT = printer.toolhead.axis_maximum.z - printer.toolhead.position.z %}
  {% set Z_POSITION = (printer.toolhead.axis_maximum.z - 1) if Z_MAX_LEFT > 1.0 else printer.toolhead.position.z %}

  G1 X0 Y0 Z{Z_POSITION}
